{"ast":null,"code":"import api from './api';\n\n// Service pour les contacts\nconst contactService = {\n  // Envoyer un message de contact\n  sendMessage: async contactData => {\n    try {\n      const response = await api.post('/contacts', contactData);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi du message:', error);\n      throw error;\n    }\n  },\n  // Obtenir tous les messages (admin seulement)\n  getAll: async () => {\n    try {\n      const response = await api.get('/contacts');\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des messages:', error);\n      throw error;\n    }\n  },\n  // Marquer un message comme lu (admin seulement)\n  markAsRead: async id => {\n    try {\n      const response = await api.put(`/contacts/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors du marquage du message ${id}:`, error);\n      throw error;\n    }\n  },\n  // Supprimer un message (admin seulement)\n  delete: async id => {\n    try {\n      const response = await api.delete(`/contacts/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la suppression du message ${id}:`, error);\n      throw error;\n    }\n  }\n};\nexport default contactService;","map":{"version":3,"names":["api","contactService","sendMessage","contactData","response","post","data","error","console","getAll","get","markAsRead","id","put","delete"],"sources":["/Users/aboubacargoita/Documents/Adiram/src/services/contactService.js"],"sourcesContent":["import api from './api';\n\n// Service pour les contacts\nconst contactService = {\n  // Envoyer un message de contact\n  sendMessage: async (contactData) => {\n    try {\n      const response = await api.post('/contacts', contactData);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de l\\'envoi du message:', error);\n      throw error;\n    }\n  },\n\n  // Obtenir tous les messages (admin seulement)\n  getAll: async () => {\n    try {\n      const response = await api.get('/contacts');\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des messages:', error);\n      throw error;\n    }\n  },\n\n  // Marquer un message comme lu (admin seulement)\n  markAsRead: async (id) => {\n    try {\n      const response = await api.put(`/contacts/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors du marquage du message ${id}:`, error);\n      throw error;\n    }\n  },\n\n  // Supprimer un message (admin seulement)\n  delete: async (id) => {\n    try {\n      const response = await api.delete(`/contacts/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la suppression du message ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\nexport default contactService;"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,MAAMC,cAAc,GAAG;EACrB;EACAC,WAAW,EAAE,MAAOC,WAAW,IAAK;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,WAAW,EAAEF,WAAW,CAAC;MACzD,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3D,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMJ,GAAG,CAACU,GAAG,CAAC,WAAW,CAAC;MAC3C,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAI,UAAU,EAAE,MAAOC,EAAE,IAAK;IACxB,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMJ,GAAG,CAACa,GAAG,CAAC,aAAaD,EAAE,EAAE,CAAC;MACjD,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sCAAsCK,EAAE,GAAG,EAAEL,KAAK,CAAC;MACjE,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAO,MAAM,EAAE,MAAOF,EAAE,IAAK;IACpB,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMJ,GAAG,CAACc,MAAM,CAAC,aAAaF,EAAE,EAAE,CAAC;MACpD,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4CAA4CK,EAAE,GAAG,EAAEL,KAAK,CAAC;MACvE,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeN,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}